{"ast":null,"code":"import _regeneratorRuntime from \"/home/sourab/projects/floating-shoe/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _slicedToArray from \"/home/sourab/projects/floating-shoe/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport { useReducer, useRef, useEffect, useLayoutEffect } from 'react';\n\nfunction create(createState) {\n  var state;\n  var listeners = new Set();\n\n  var setState = function setState(partial, replace) {\n    var nextState = typeof partial === 'function' ? partial(state) : partial;\n\n    if (nextState !== state) {\n      var previousState = state;\n      state = replace ? nextState : Object.assign({}, state, nextState);\n      listeners.forEach(function (listener) {\n        return listener(state, previousState);\n      });\n    }\n  };\n\n  var getState = function getState() {\n    return state;\n  };\n\n  var subscribeWithSelector = function subscribeWithSelector(listener) {\n    var selector = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : getState;\n    var equalityFn = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : Object.is;\n    var currentSlice = selector(state);\n\n    function listenerToAdd() {\n      var nextSlice = selector(state);\n\n      if (!equalityFn(currentSlice, nextSlice)) {\n        var previousSlice = currentSlice;\n        listener(currentSlice = nextSlice, previousSlice);\n      }\n    }\n\n    listeners.add(listenerToAdd); // Unsubscribe\n\n    return function () {\n      return listeners.delete(listenerToAdd);\n    };\n  };\n\n  var subscribe = function subscribe(listener, selector, equalityFn) {\n    if (selector || equalityFn) {\n      return subscribeWithSelector(listener, selector, equalityFn);\n    }\n\n    listeners.add(listener); // Unsubscribe\n\n    return function () {\n      return listeners.delete(listener);\n    };\n  };\n\n  var destroy = function destroy() {\n    return listeners.clear();\n  };\n\n  var api = {\n    setState,\n    getState,\n    subscribe,\n    destroy\n  };\n  state = createState(setState, getState, api);\n  return api;\n}\n\nvar useIsoLayoutEffect = typeof window === 'undefined' ? useEffect : useLayoutEffect;\n\nfunction create$1(createState) {\n  var api = typeof createState === 'function' ? create(createState) : createState;\n\n  var useStore = function useStore() {\n    var selector = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : api.getState;\n    var equalityFn = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : Object.is;\n\n    var _useReducer = useReducer(function (c) {\n      return c + 1;\n    }, 0),\n        _useReducer2 = _slicedToArray(_useReducer, 2),\n        forceUpdate = _useReducer2[1];\n\n    var state = api.getState();\n    var stateRef = useRef(state);\n    var selectorRef = useRef(selector);\n    var equalityFnRef = useRef(equalityFn);\n    var erroredRef = useRef(false);\n    var currentSliceRef = useRef();\n\n    if (currentSliceRef.current === undefined) {\n      currentSliceRef.current = selector(state);\n    }\n\n    var newStateSlice;\n    var hasNewStateSlice = false; // The selector or equalityFn need to be called during the render phase if\n    // they change. We also want legitimate errors to be visible so we re-run\n    // them if they errored in the subscriber.\n\n    if (stateRef.current !== state || selectorRef.current !== selector || equalityFnRef.current !== equalityFn || erroredRef.current) {\n      // Using local variables to avoid mutations in the render phase.\n      newStateSlice = selector(state);\n      hasNewStateSlice = !equalityFn(currentSliceRef.current, newStateSlice);\n    } // Syncing changes in useEffect.\n\n\n    useIsoLayoutEffect(function () {\n      if (hasNewStateSlice) {\n        currentSliceRef.current = newStateSlice;\n      }\n\n      stateRef.current = state;\n      selectorRef.current = selector;\n      equalityFnRef.current = equalityFn;\n      erroredRef.current = false;\n    });\n    var stateBeforeSubscriptionRef = useRef(state);\n    useEffect(function () {\n      var listener = function listener() {\n        try {\n          var nextState = api.getState();\n          var nextStateSlice = selectorRef.current(nextState);\n\n          if (!equalityFnRef.current(currentSliceRef.current, nextStateSlice)) {\n            stateRef.current = nextState;\n            currentSliceRef.current = nextStateSlice;\n            forceUpdate();\n          }\n        } catch (error) {\n          erroredRef.current = true;\n          forceUpdate();\n        }\n      };\n\n      var unsubscribe = api.subscribe(listener);\n\n      if (api.getState() !== stateBeforeSubscriptionRef.current) {\n        listener(); // state has changed before subscription\n      }\n\n      return unsubscribe;\n    }, []);\n    return hasNewStateSlice ? newStateSlice : currentSliceRef.current;\n  };\n\n  Object.assign(useStore, api); // For backward compatibility (No TS types for this)\n\n  useStore[Symbol.iterator] = /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            console.warn('[useStore, api] = create() is deprecated and will be removed in v4');\n            _context.next = 3;\n            return useStore;\n\n          case 3:\n            _context.next = 5;\n            return api;\n\n          case 5:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  });\n  return useStore;\n}\n\nexport default create$1;","map":{"version":3,"sources":["/home/sourab/projects/floating-shoe/node_modules/zustand/index.js"],"names":["useReducer","useRef","useEffect","useLayoutEffect","create","createState","state","listeners","Set","setState","partial","replace","nextState","previousState","Object","assign","forEach","listener","getState","subscribeWithSelector","selector","equalityFn","is","currentSlice","listenerToAdd","nextSlice","previousSlice","add","delete","subscribe","destroy","clear","api","useIsoLayoutEffect","window","create$1","useStore","c","forceUpdate","stateRef","selectorRef","equalityFnRef","erroredRef","currentSliceRef","current","undefined","newStateSlice","hasNewStateSlice","stateBeforeSubscriptionRef","nextStateSlice","error","unsubscribe","Symbol","iterator","console","warn"],"mappings":";;AAAA,SAASA,UAAT,EAAqBC,MAArB,EAA6BC,SAA7B,EAAwCC,eAAxC,QAA+D,OAA/D;;AAEA,SAASC,MAAT,CAAgBC,WAAhB,EAA6B;AAC3B,MAAIC,KAAJ;AACA,MAAMC,SAAS,GAAG,IAAIC,GAAJ,EAAlB;;AAEA,MAAMC,QAAQ,GAAG,SAAXA,QAAW,CAACC,OAAD,EAAUC,OAAV,EAAsB;AACrC,QAAMC,SAAS,GAAG,OAAOF,OAAP,KAAmB,UAAnB,GAAgCA,OAAO,CAACJ,KAAD,CAAvC,GAAiDI,OAAnE;;AAEA,QAAIE,SAAS,KAAKN,KAAlB,EAAyB;AACvB,UAAMO,aAAa,GAAGP,KAAtB;AACAA,MAAAA,KAAK,GAAGK,OAAO,GAAGC,SAAH,GAAeE,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBT,KAAlB,EAAyBM,SAAzB,CAA9B;AACAL,MAAAA,SAAS,CAACS,OAAV,CAAkB,UAAAC,QAAQ;AAAA,eAAIA,QAAQ,CAACX,KAAD,EAAQO,aAAR,CAAZ;AAAA,OAA1B;AACD;AACF,GARD;;AAUA,MAAMK,QAAQ,GAAG,SAAXA,QAAW;AAAA,WAAMZ,KAAN;AAAA,GAAjB;;AAEA,MAAMa,qBAAqB,GAAG,SAAxBA,qBAAwB,CAACF,QAAD,EAA2D;AAAA,QAAhDG,QAAgD,uEAArCF,QAAqC;AAAA,QAA3BG,UAA2B,uEAAdP,MAAM,CAACQ,EAAO;AACvF,QAAIC,YAAY,GAAGH,QAAQ,CAACd,KAAD,CAA3B;;AAEA,aAASkB,aAAT,GAAyB;AACvB,UAAMC,SAAS,GAAGL,QAAQ,CAACd,KAAD,CAA1B;;AAEA,UAAI,CAACe,UAAU,CAACE,YAAD,EAAeE,SAAf,CAAf,EAA0C;AACxC,YAAMC,aAAa,GAAGH,YAAtB;AACAN,QAAAA,QAAQ,CAACM,YAAY,GAAGE,SAAhB,EAA2BC,aAA3B,CAAR;AACD;AACF;;AAEDnB,IAAAA,SAAS,CAACoB,GAAV,CAAcH,aAAd,EAZuF,CAYzD;;AAE9B,WAAO;AAAA,aAAMjB,SAAS,CAACqB,MAAV,CAAiBJ,aAAjB,CAAN;AAAA,KAAP;AACD,GAfD;;AAiBA,MAAMK,SAAS,GAAG,SAAZA,SAAY,CAACZ,QAAD,EAAWG,QAAX,EAAqBC,UAArB,EAAoC;AACpD,QAAID,QAAQ,IAAIC,UAAhB,EAA4B;AAC1B,aAAOF,qBAAqB,CAACF,QAAD,EAAWG,QAAX,EAAqBC,UAArB,CAA5B;AACD;;AAEDd,IAAAA,SAAS,CAACoB,GAAV,CAAcV,QAAd,EALoD,CAK3B;;AAEzB,WAAO;AAAA,aAAMV,SAAS,CAACqB,MAAV,CAAiBX,QAAjB,CAAN;AAAA,KAAP;AACD,GARD;;AAUA,MAAMa,OAAO,GAAG,SAAVA,OAAU;AAAA,WAAMvB,SAAS,CAACwB,KAAV,EAAN;AAAA,GAAhB;;AAEA,MAAMC,GAAG,GAAG;AACVvB,IAAAA,QADU;AAEVS,IAAAA,QAFU;AAGVW,IAAAA,SAHU;AAIVC,IAAAA;AAJU,GAAZ;AAMAxB,EAAAA,KAAK,GAAGD,WAAW,CAACI,QAAD,EAAWS,QAAX,EAAqBc,GAArB,CAAnB;AACA,SAAOA,GAAP;AACD;;AAED,IAAMC,kBAAkB,GAAG,OAAOC,MAAP,KAAkB,WAAlB,GAAgChC,SAAhC,GAA4CC,eAAvE;;AACA,SAASgC,QAAT,CAAkB9B,WAAlB,EAA+B;AAC7B,MAAM2B,GAAG,GAAG,OAAO3B,WAAP,KAAuB,UAAvB,GAAoCD,MAAM,CAACC,WAAD,CAA1C,GAA0DA,WAAtE;;AAEA,MAAM+B,QAAQ,GAAG,SAAXA,QAAW,GAAqD;AAAA,QAApDhB,QAAoD,uEAAzCY,GAAG,CAACd,QAAqC;AAAA,QAA3BG,UAA2B,uEAAdP,MAAM,CAACQ,EAAO;;AAAA,sBAC5CtB,UAAU,CAAC,UAAAqC,CAAC;AAAA,aAAIA,CAAC,GAAG,CAAR;AAAA,KAAF,EAAa,CAAb,CADkC;AAAA;AAAA,QAC3DC,WAD2D;;AAEpE,QAAMhC,KAAK,GAAG0B,GAAG,CAACd,QAAJ,EAAd;AACA,QAAMqB,QAAQ,GAAGtC,MAAM,CAACK,KAAD,CAAvB;AACA,QAAMkC,WAAW,GAAGvC,MAAM,CAACmB,QAAD,CAA1B;AACA,QAAMqB,aAAa,GAAGxC,MAAM,CAACoB,UAAD,CAA5B;AACA,QAAMqB,UAAU,GAAGzC,MAAM,CAAC,KAAD,CAAzB;AACA,QAAM0C,eAAe,GAAG1C,MAAM,EAA9B;;AAEA,QAAI0C,eAAe,CAACC,OAAhB,KAA4BC,SAAhC,EAA2C;AACzCF,MAAAA,eAAe,CAACC,OAAhB,GAA0BxB,QAAQ,CAACd,KAAD,CAAlC;AACD;;AAED,QAAIwC,aAAJ;AACA,QAAIC,gBAAgB,GAAG,KAAvB,CAdoE,CActC;AAC9B;AACA;;AAEA,QAAIR,QAAQ,CAACK,OAAT,KAAqBtC,KAArB,IAA8BkC,WAAW,CAACI,OAAZ,KAAwBxB,QAAtD,IAAkEqB,aAAa,CAACG,OAAd,KAA0BvB,UAA5F,IAA0GqB,UAAU,CAACE,OAAzH,EAAkI;AAChI;AACAE,MAAAA,aAAa,GAAG1B,QAAQ,CAACd,KAAD,CAAxB;AACAyC,MAAAA,gBAAgB,GAAG,CAAC1B,UAAU,CAACsB,eAAe,CAACC,OAAjB,EAA0BE,aAA1B,CAA9B;AACD,KAtBmE,CAsBlE;;;AAGFb,IAAAA,kBAAkB,CAAC,YAAM;AACvB,UAAIc,gBAAJ,EAAsB;AACpBJ,QAAAA,eAAe,CAACC,OAAhB,GAA0BE,aAA1B;AACD;;AAEDP,MAAAA,QAAQ,CAACK,OAAT,GAAmBtC,KAAnB;AACAkC,MAAAA,WAAW,CAACI,OAAZ,GAAsBxB,QAAtB;AACAqB,MAAAA,aAAa,CAACG,OAAd,GAAwBvB,UAAxB;AACAqB,MAAAA,UAAU,CAACE,OAAX,GAAqB,KAArB;AACD,KATiB,CAAlB;AAUA,QAAMI,0BAA0B,GAAG/C,MAAM,CAACK,KAAD,CAAzC;AACAJ,IAAAA,SAAS,CAAC,YAAM;AACd,UAAMe,QAAQ,GAAG,SAAXA,QAAW,GAAM;AACrB,YAAI;AACF,cAAML,SAAS,GAAGoB,GAAG,CAACd,QAAJ,EAAlB;AACA,cAAM+B,cAAc,GAAGT,WAAW,CAACI,OAAZ,CAAoBhC,SAApB,CAAvB;;AAEA,cAAI,CAAC6B,aAAa,CAACG,OAAd,CAAsBD,eAAe,CAACC,OAAtC,EAA+CK,cAA/C,CAAL,EAAqE;AACnEV,YAAAA,QAAQ,CAACK,OAAT,GAAmBhC,SAAnB;AACA+B,YAAAA,eAAe,CAACC,OAAhB,GAA0BK,cAA1B;AACAX,YAAAA,WAAW;AACZ;AACF,SATD,CASE,OAAOY,KAAP,EAAc;AACdR,UAAAA,UAAU,CAACE,OAAX,GAAqB,IAArB;AACAN,UAAAA,WAAW;AACZ;AACF,OAdD;;AAgBA,UAAMa,WAAW,GAAGnB,GAAG,CAACH,SAAJ,CAAcZ,QAAd,CAApB;;AAEA,UAAIe,GAAG,CAACd,QAAJ,OAAmB8B,0BAA0B,CAACJ,OAAlD,EAA2D;AACzD3B,QAAAA,QAAQ,GADiD,CAC7C;AACb;;AAED,aAAOkC,WAAP;AACD,KAxBQ,EAwBN,EAxBM,CAAT;AAyBA,WAAOJ,gBAAgB,GAAGD,aAAH,GAAmBH,eAAe,CAACC,OAA1D;AACD,GA9DD;;AAgEA9B,EAAAA,MAAM,CAACC,MAAP,CAAcqB,QAAd,EAAwBJ,GAAxB,EAnE6B,CAmEC;;AAE9BI,EAAAA,QAAQ,CAACgB,MAAM,CAACC,QAAR,CAAR,yCAA4B;AAAA;AAAA;AAAA;AAAA;AAC1BC,YAAAA,OAAO,CAACC,IAAR,CAAa,oEAAb;AAD0B;AAE1B,mBAAMnB,QAAN;;AAF0B;AAAA;AAG1B,mBAAMJ,GAAN;;AAH0B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAA5B;AAMA,SAAOI,QAAP;AACD;;AAED,eAAeD,QAAf","sourcesContent":["import { useReducer, useRef, useEffect, useLayoutEffect } from 'react';\n\nfunction create(createState) {\n  let state;\n  const listeners = new Set();\n\n  const setState = (partial, replace) => {\n    const nextState = typeof partial === 'function' ? partial(state) : partial;\n\n    if (nextState !== state) {\n      const previousState = state;\n      state = replace ? nextState : Object.assign({}, state, nextState);\n      listeners.forEach(listener => listener(state, previousState));\n    }\n  };\n\n  const getState = () => state;\n\n  const subscribeWithSelector = (listener, selector = getState, equalityFn = Object.is) => {\n    let currentSlice = selector(state);\n\n    function listenerToAdd() {\n      const nextSlice = selector(state);\n\n      if (!equalityFn(currentSlice, nextSlice)) {\n        const previousSlice = currentSlice;\n        listener(currentSlice = nextSlice, previousSlice);\n      }\n    }\n\n    listeners.add(listenerToAdd); // Unsubscribe\n\n    return () => listeners.delete(listenerToAdd);\n  };\n\n  const subscribe = (listener, selector, equalityFn) => {\n    if (selector || equalityFn) {\n      return subscribeWithSelector(listener, selector, equalityFn);\n    }\n\n    listeners.add(listener); // Unsubscribe\n\n    return () => listeners.delete(listener);\n  };\n\n  const destroy = () => listeners.clear();\n\n  const api = {\n    setState,\n    getState,\n    subscribe,\n    destroy\n  };\n  state = createState(setState, getState, api);\n  return api;\n}\n\nconst useIsoLayoutEffect = typeof window === 'undefined' ? useEffect : useLayoutEffect;\nfunction create$1(createState) {\n  const api = typeof createState === 'function' ? create(createState) : createState;\n\n  const useStore = (selector = api.getState, equalityFn = Object.is) => {\n    const [, forceUpdate] = useReducer(c => c + 1, 0);\n    const state = api.getState();\n    const stateRef = useRef(state);\n    const selectorRef = useRef(selector);\n    const equalityFnRef = useRef(equalityFn);\n    const erroredRef = useRef(false);\n    const currentSliceRef = useRef();\n\n    if (currentSliceRef.current === undefined) {\n      currentSliceRef.current = selector(state);\n    }\n\n    let newStateSlice;\n    let hasNewStateSlice = false; // The selector or equalityFn need to be called during the render phase if\n    // they change. We also want legitimate errors to be visible so we re-run\n    // them if they errored in the subscriber.\n\n    if (stateRef.current !== state || selectorRef.current !== selector || equalityFnRef.current !== equalityFn || erroredRef.current) {\n      // Using local variables to avoid mutations in the render phase.\n      newStateSlice = selector(state);\n      hasNewStateSlice = !equalityFn(currentSliceRef.current, newStateSlice);\n    } // Syncing changes in useEffect.\n\n\n    useIsoLayoutEffect(() => {\n      if (hasNewStateSlice) {\n        currentSliceRef.current = newStateSlice;\n      }\n\n      stateRef.current = state;\n      selectorRef.current = selector;\n      equalityFnRef.current = equalityFn;\n      erroredRef.current = false;\n    });\n    const stateBeforeSubscriptionRef = useRef(state);\n    useEffect(() => {\n      const listener = () => {\n        try {\n          const nextState = api.getState();\n          const nextStateSlice = selectorRef.current(nextState);\n\n          if (!equalityFnRef.current(currentSliceRef.current, nextStateSlice)) {\n            stateRef.current = nextState;\n            currentSliceRef.current = nextStateSlice;\n            forceUpdate();\n          }\n        } catch (error) {\n          erroredRef.current = true;\n          forceUpdate();\n        }\n      };\n\n      const unsubscribe = api.subscribe(listener);\n\n      if (api.getState() !== stateBeforeSubscriptionRef.current) {\n        listener(); // state has changed before subscription\n      }\n\n      return unsubscribe;\n    }, []);\n    return hasNewStateSlice ? newStateSlice : currentSliceRef.current;\n  };\n\n  Object.assign(useStore, api); // For backward compatibility (No TS types for this)\n\n  useStore[Symbol.iterator] = function* () {\n    console.warn('[useStore, api] = create() is deprecated and will be removed in v4');\n    yield useStore;\n    yield api;\n  };\n\n  return useStore;\n}\n\nexport default create$1;\n"]},"metadata":{},"sourceType":"module"}